// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition"

// DATE "09/19/2024 18:05:33"

// 
// Device: Altera 5CEBA4F23C7 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	Q,
	clear,
	clock);
output 	[7:0] Q;
input 	clear;
input 	clock;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q[7]~output_o ;
wire \Q[6]~output_o ;
wire \Q[5]~output_o ;
wire \Q[4]~output_o ;
wire \Q[3]~output_o ;
wire \Q[2]~output_o ;
wire \Q[1]~output_o ;
wire \Q[0]~output_o ;
wire \clock~input_o ;
wire \inst~0_combout ;
wire \clear~input_o ;
wire \inst~q ;
wire \inst4~0_combout ;
wire \inst4~q ;
wire \inst5~0_combout ;
wire \inst5~q ;
wire \inst6~0_combout ;
wire \inst6~q ;
wire \inst7~0_combout ;
wire \inst7~q ;
wire \inst8~0_combout ;
wire \inst8~q ;
wire \inst13~combout ;
wire \inst9~0_combout ;
wire \inst9~q ;
wire \inst10~0_combout ;
wire \inst10~q ;


cyclonev_io_obuf \Q[7]~output (
	.i(\inst10~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[7]~output .bus_hold = "false";
defparam \Q[7]~output .open_drain_output = "false";
defparam \Q[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[6]~output (
	.i(\inst9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[6]~output .bus_hold = "false";
defparam \Q[6]~output .open_drain_output = "false";
defparam \Q[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[5]~output (
	.i(\inst8~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[5]~output .bus_hold = "false";
defparam \Q[5]~output .open_drain_output = "false";
defparam \Q[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[4]~output (
	.i(\inst7~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[4]~output .bus_hold = "false";
defparam \Q[4]~output .open_drain_output = "false";
defparam \Q[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[3]~output (
	.i(\inst6~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[3]~output .bus_hold = "false";
defparam \Q[3]~output .open_drain_output = "false";
defparam \Q[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[2]~output (
	.i(\inst5~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
defparam \Q[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[1]~output (
	.i(\inst4~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
defparam \Q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[0]~output (
	.i(\inst~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
defparam \Q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = !\inst~q 

	.dataa(!\inst~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst~0 .extended_lut = "off";
defparam \inst~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \clear~input (
	.i(clear),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clear~input_o ));
// synopsys translate_off
defparam \clear~input .bus_hold = "false";
defparam \clear~input .simulate_z_as = "z";
// synopsys translate_on

dffeas inst(
	.clk(\clock~input_o ),
	.d(\inst~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = !\inst4~q  $ (!\inst~q )

	.dataa(!\inst4~q ),
	.datab(!\inst~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst4~0 .extended_lut = "off";
defparam \inst4~0 .lut_mask = 64'h6666666666666666;
defparam \inst4~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst4(
	.clk(\clock~input_o ),
	.d(\inst4~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst4~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst4.is_wysiwyg = "true";
defparam inst4.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst5~0 (
// Equation(s):
// \inst5~0_combout  = !\inst5~q  $ (((!\inst4~q ) # (!\inst~q )))

	.dataa(!\inst5~q ),
	.datab(!\inst4~q ),
	.datac(!\inst~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5~0 .extended_lut = "off";
defparam \inst5~0 .lut_mask = 64'h5656565656565656;
defparam \inst5~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst5(
	.clk(\clock~input_o ),
	.d(\inst5~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst5~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst5.is_wysiwyg = "true";
defparam inst5.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = !\inst6~q  $ (((!\inst5~q ) # ((!\inst4~q ) # (!\inst~q ))))

	.dataa(!\inst6~q ),
	.datab(!\inst5~q ),
	.datac(!\inst4~q ),
	.datad(!\inst~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst6~0 .extended_lut = "off";
defparam \inst6~0 .lut_mask = 64'h5556555655565556;
defparam \inst6~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst6(
	.clk(\clock~input_o ),
	.d(\inst6~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst6~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst6.is_wysiwyg = "true";
defparam inst6.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = ( \inst~q  & ( !\inst7~q  $ (((!\inst6~q ) # ((!\inst5~q ) # (!\inst4~q )))) ) ) # ( !\inst~q  & ( \inst7~q  ) )

	.dataa(!\inst7~q ),
	.datab(!\inst6~q ),
	.datac(!\inst5~q ),
	.datad(!\inst4~q ),
	.datae(!\inst~q ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7~0 .extended_lut = "off";
defparam \inst7~0 .lut_mask = 64'h5555555655555556;
defparam \inst7~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst7(
	.clk(\clock~input_o ),
	.d(\inst7~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst7~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst7.is_wysiwyg = "true";
defparam inst7.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst8~0 (
// Equation(s):
// \inst8~0_combout  = ( \inst4~q  & ( \inst~q  & ( !\inst8~q  $ (((!\inst7~q ) # ((!\inst6~q ) # (!\inst5~q )))) ) ) ) # ( !\inst4~q  & ( \inst~q  & ( \inst8~q  ) ) ) # ( \inst4~q  & ( !\inst~q  & ( \inst8~q  ) ) ) # ( !\inst4~q  & ( !\inst~q  & ( \inst8~q  
// ) ) )

	.dataa(!\inst8~q ),
	.datab(!\inst7~q ),
	.datac(!\inst6~q ),
	.datad(!\inst5~q ),
	.datae(!\inst4~q ),
	.dataf(!\inst~q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst8~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst8~0 .extended_lut = "off";
defparam \inst8~0 .lut_mask = 64'h5555555555555556;
defparam \inst8~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst8(
	.clk(\clock~input_o ),
	.d(\inst8~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst8~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst8.is_wysiwyg = "true";
defparam inst8.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb inst13(
// Equation(s):
// \inst13~combout  = (\inst6~q  & (\inst5~q  & (\inst4~q  & \inst~q )))

	.dataa(!\inst6~q ),
	.datab(!\inst5~q ),
	.datac(!\inst4~q ),
	.datad(!\inst~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst13~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst13.extended_lut = "off";
defparam inst13.lut_mask = 64'h0001000100010001;
defparam inst13.shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst9~0 (
// Equation(s):
// \inst9~0_combout  = !\inst9~q  $ (((!\inst8~q ) # ((!\inst7~q ) # (!\inst13~combout ))))

	.dataa(!\inst9~q ),
	.datab(!\inst8~q ),
	.datac(!\inst7~q ),
	.datad(!\inst13~combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst9~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst9~0 .extended_lut = "off";
defparam \inst9~0 .lut_mask = 64'h5556555655565556;
defparam \inst9~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst9(
	.clk(\clock~input_o ),
	.d(\inst9~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst9~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst9.is_wysiwyg = "true";
defparam inst9.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst10~0 (
// Equation(s):
// \inst10~0_combout  = ( \inst13~combout  & ( !\inst10~q  $ (((!\inst9~q ) # ((!\inst8~q ) # (!\inst7~q )))) ) ) # ( !\inst13~combout  & ( \inst10~q  ) )

	.dataa(!\inst10~q ),
	.datab(!\inst9~q ),
	.datac(!\inst8~q ),
	.datad(!\inst7~q ),
	.datae(!\inst13~combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst10~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst10~0 .extended_lut = "off";
defparam \inst10~0 .lut_mask = 64'h5555555655555556;
defparam \inst10~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst10(
	.clk(\clock~input_o ),
	.d(\inst10~0_combout ),
	.asdata(vcc),
	.clrn(\clear~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst10~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst10.is_wysiwyg = "true";
defparam inst10.power_up = "low";
// synopsys translate_on

assign Q[7] = \Q[7]~output_o ;

assign Q[6] = \Q[6]~output_o ;

assign Q[5] = \Q[5]~output_o ;

assign Q[4] = \Q[4]~output_o ;

assign Q[3] = \Q[3]~output_o ;

assign Q[2] = \Q[2]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[0] = \Q[0]~output_o ;

endmodule
